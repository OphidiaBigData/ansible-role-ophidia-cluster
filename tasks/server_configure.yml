#################################################
# Setup firewall
- name: Copy template of 'check_firewall' file
  template:
    src=check_firewall.sh.j2
    dest=/tmp/check_firewall.sh
    mode=0700
    owner=root
    group=root

- firewalld:
    service: "{{ item }}"
    zone: public
    permanent: true
    state: enabled
    immediate: yes
  with_items:
     - "https"
     - "http"

- firewalld:
    port: "11732/tcp"
    zone: public
    permanent: true
    state: enabled
    immediate: yes

- firewalld:
    source: "{{ item }}"
    permanent: true
    zone: trusted
    state: enabled
    immediate: yes
  with_items:
    - "{{ io_ips }}"
    - "{{ server_ip }}”
    - "127.0.0.1"

- name: Start firewalld
  service: name=firewalld state=started enabled=yes

- name: Reload firewall rules
  shell: firewall-cmd --reload

- name: Check IO nodes in firewall
  shell:
    /tmp/check_firewall.sh
  args:
    executable: /bin/bash

#################################################
# Tasks for general configuration
- name: Copy template of Ophidia server server.conf
  template:
    src=server.conf.j2
    dest=/usr/local/ophidia/oph-server/etc/server.conf
    mode=0644
    owner={{ oph_user }}
    group={{ oph_user }}

- name: Copy template of Ophidia server ophidiadb.conf
  template:
    src=ophidiadb.conf.j2
    dest=/usr/local/ophidia/oph-server/etc/ophidiadb.conf
    mode=0644
    owner={{ oph_user }}
    group={{ oph_user }}

- name: Copy template of 'check_io_nodes' file
  template:
    src=check_io_nodes.sh.j2
    dest=/tmp/check_io_nodes.sh
    mode=0755
    owner={{ oph_user }}
    group={{ oph_user }}

# Create server certs
- include: certs.yml

#######################################################
# Tasks to set data in NFS shared folder
- name: Create folder for sessions
  file: path=/data/ophidia owner={{ oph_user }} group={{ oph_user }} state=directory

- name: Create folder for data
  file: path=/data/repository owner={{ oph_user }} group={{ oph_user }} state=directory

- name: Check shared folder symlink
  stat: path=/var/www/html/ophidia
  register: sym

- name: Copy file from web folder
  copy: src=/var/www/html/ophidia dest=/data
  when: sym.stat.islnk is defined and sym.stat.islnk == False

- name: Delete web folder
  file: path=/var/www/html/ophidia state=absent
  when: sym.stat.islnk is defined and sym.stat.islnk == False

- name: Create symlink on Ophidia web space
  file: src=/data/ophidia dest=/var/www/html/ophidia state=link
  when: sym.stat.islnk is defined and sym.stat.islnk == False

#######################################################
# Tasks to setup/config mysql and necessary databases
- name: Start the MySQL service
  service: name=mysql state=started enabled=yes

- name: Wait for mysql start
  wait_for: path=/var/lib/mysql/mysql.sock

- name: Set mysql root passwd
  mysql_user: name=root password={{ ophdb_passwd }} host={{ item }}
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ ansible_nodename }}"
    - 127.0.0.1
    - ::1
    - localhost

- name: Copy template of .my.cnf to root
  template:
    src=my.cnf.j2
    dest=/root/.my.cnf
    mode=0600
    owner=root
    group=root

- name: Copy template of .my.cnf to oph_user
  template:
    src=my.cnf.j2
    dest=/home/{{ oph_user }}/.my.cnf
    mode=0600
    owner={{ oph_user }}
    group={{ oph_user }}

- name: Import Ophidia primitives
  mysql_db: name=mysql state=import target=/usr/local/ophidia/oph-cluster/oph-primitives/etc/create_func.sql

- name: Create Ophidia databases
  mysql_db: name={{ item }} state=present
  with_items:
    - ophidiadb
    - oph_dimensions
  register: new_ophidiadbs

- name: Import Ohidia analytics db
  mysql_db: name=ophidiadb state=import target=/usr/local/ophidia/oph-cluster/oph-analytics-framework/etc/ophidiadb.sql
  when: new_ophidiadbs.changed

- name: Copy template of ophdb-partition.sql to root
  template:
    src=ophdb-partition.sql.j2
    dest=/tmp/ophdb-partition.sql
    mode=0600
    owner=root
    group=root
  when: new_ophidiadbs.changed

- name: Import ophdb-partition.sql
  mysql_db: name=ophidiadb state=import target=/tmp/ophdb-partition.sql
  when: new_ophidiadbs.changed

- name: Grant Mysql privileges
  mysql_user: name=root password='{{ ophdb_passwd }}' host='{{ mysql_subnet }}' priv={{ item }}
  with_items:
    - ophidiadb.*:ALL
    - oph_dimensions.*:ALL
    - mysql.*:EXECUTE

- name: Check IO nodes in OphidiaDB
  shell:
    /tmp/check_io_nodes.sh
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ oph_user }}"

#######################################################
# Tasks to start the services
- name: Start httpd
  shell: pgrep httpd || /usr/sbin/httpd

- name: Start sshd
  service: name=sshd state=started enabled=yes

#######################################################
# Task to start Ophidia service
- name: Start ophidia server
  shell: pgrep oph_server || (nohup oph_server 2>&1 > /dev/null &)
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ oph_user }}"

